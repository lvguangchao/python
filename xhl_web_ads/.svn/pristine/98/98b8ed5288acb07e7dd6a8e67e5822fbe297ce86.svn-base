var icom_dupdate = ''


function excelImportAds_show() {
    $("#dlg-notice").show();
    $("#dialog-withdrawanchorinfo-info").modal();
}




function excelImportAds() {
    var xhr = new XMLHttpRequest();
    var add_withdrawanchor_select = $('#add_withdrawanchor_select option:selected').val();
    // alert(schedule_id_import);
    xhr.onreadystatechange = function () {
        if (xhr.readyState == 4 && xhr.status == 200) {
            var b = xhr.responseText;
            var result = JSON.parse(b);
            if (result.code == 1) {
                alert("导入成功！");
                window.location.reload()
            } else if (result.code == -2) {
                alert('设置(无效的提现ID为): ' + result.message);
                window.location.reload()
            }
            else {
                alert("导入失败！");
            }
        }
    };
    var files = document.getElementById('files_ads').files;
    if (!files.length) {
        alert('请选择文件!');
        return;
    }
    var form = new FormData();
    var file = files[0];
    // var union_name=$('#hid_union_id').val()

    form.append("infile", file);
    form.append("add_withdrawanchor_select", add_withdrawanchor_select);
    xhr.open("post", "/withdrawanchorlist/import", false);
    xhr.send(form);
}


ywl.on_init = function (cb_stack, cb_args) {
    var dom_id = '#withdrawanchorlist-list';
    // var tbl_dom_id = '#ywl_host_list';
    //===================================
    // 创建页面控件对象
    //===================================
    var host_table_options = {
        selector: dom_id + " [toc-table='withdrawanchorlist-list']",
        data_source: {
            type: 'ajax-post',
            url: '/withdrawanchorlist/list'
        },
        column_default: {sort: false, header_align: 'center', cell_align: 'center'},
        columns: [
            {
                title: '<input type="checkbox" id="host-select-all" value="">',
                key: 'select_all',
                sort: false,
                width: 10,
                render: 'make_check_box',
                fields: {id: 'id'}
            },
            {
                title: "提现ID", key: "id", width: 10, fields: {id: 'id'}
            },
            {title: "用户ID", key: "user_id", width: 10},
            {
                title: "状态",
                key: "",
                width: 10,
                render: 'format_incomeAll',
                fields: {anchor_balance: 'apply_name', union_balance: "apply_name"}
            },
            {
                title: "是否有已支付提现", key: "withdraw_yes_no", width: 10, render: 'withdraw_yes_no',
                fields: {anchor_balance: 'withdraw_yes_no', union_balance: "withdraw_yes_no"}
            },
            {title: "手机号", key: "u_mobile_number", width: 10},
            {title: "实际需打款金额", key: "money", width: 10},
            {title: "广告收入提现金额(已扣除服务费)", key: "money_balance", width: 10},
            {title: "广告收入提现服务费", key: "sevice_money_balance", width: 10},
            {title: "红包提现金额", key: "money_rp", width: 10},
            {title: "银行名称", key: "bank_name", width: 10},
            {title: "银行卡号", key: "bank_card_number", width: 10},
            {title: "支行名", key: "bank_sub_name", width: 10},
            {title: "持卡人姓名", key: "hold_user_name", width: 10},
            {title: "身份证号", key: "id_number", width: 10},
            {
                title: "身份证正面照片", key: "id_img_front", width: 10, render: 'front_with',
                fields: {id_img_front: 'id_img_front'}
            },
            {
                title: "身份证背面照片", key: "id_img_back", width: 10, render: 'back_with',
                fields: {id_img_back: 'id_img_back'}
            },
            {title: "qq号", key: "qq_number", width: 10},
            {title: "当前余额", key: "money_balance", width: 10},
            {title: "公会名称", key: "union_name", width: 10},
            {
                title: "房间地址", key: "room_url", width: 10, render: "room_url",
                fields: {room_url: "room_url"}
            },
            {
                title: "备注", key: "remark", width: 10
            },
            {
                title: "申请时间", key: "create_time", width: 10, render: 'format_time', sort: true,
                fields: {logtime: 'create_time'}
            },
            {
                title: "更新时间", key: "logtime", width: 100, render: 'format_time', sort: true,
                fields: {logtime: 'logtime'}
            },
            {
                title: "操作",
                key: "action",
                width: 170,
                header_align: 'left', cell_align: 'left',
                render: 'make_action_btn',
                fields: {ID: 'id', remark: 'remark'}
            }
        ],
        paging: {selector: dom_id, per_page: paging_big},

        // 可用的属性设置
        have_header: true,

        // 可用的回调函数
        on_created: ywl.on_host_table_created,
        on_header_created: ywl.on_host_table_header_created


    };

    var host_table = ywl.create_table(host_table_options);

    $(dom_id + " [ywl-filter='reload']").click(host_table.reload);


    document.getElementById("start_time").value = "" + getDate() + "";
    document.getElementById("end_time").value = "" + getDate() + "";

    v_dlg = ywl.create_needschedule_info_dlg(host_table);

    $("#btn-host-15").click(function () {
        var ids = [];
        var _objs = $(host_table.selector + " tbody tr td [data-check-box]");
        $.each(_objs, function (i, _obj) {
            if ($(_obj).is(':checked')) {
                var _row_data = host_table.get_row(_obj);
                ids.push(_row_data.id);
            }
        });
        if (ids.length === 0) {
            ywl.notify_error('请选择要批量修改的提现ID！');
            return;
        }
        var _fn_sure = function (cb_stack, cb_args) {
            ywl.ajax_post_json_time_out('/withdrawanchorlist/edit', {ids: ids, type: 15}, 1000 * 30,
                function (ret) {
                    if (ret.code === TPE_OK) {
                        host_table.reload();
                        ywl.notify_success('设为已审核成功！');
                    } else if (ret.code === -2) {
                        host_table.reload();
                        ywl.notify_success('设为已审核部分成功！');
                        alert('无法设为已审核(失败的提现ID为): ' + ret.message)
                    } else {
                        ywl.notify_error('设为已审核失败！' + ret.message);
                    }
                },
                function () {
                    ywl.notify_error('网络故障，设为已审核失败！');
                }
            );
        };
        var cb_stack = CALLBACK_STACK.create();

        ywl.dlg_confirm(cb_stack, {
            msg: '<p>您确定要设为已审核吗?</p>',
            fn_yes: _fn_sure
        });
    });
    $("#btn-host-11").click(function () {
        var ids = [];
        var _objs = $(host_table.selector + " tbody tr td [data-check-box]");
        $.each(_objs, function (i, _obj) {
            if ($(_obj).is(':checked')) {
                var _row_data = host_table.get_row(_obj);
                ids.push(_row_data.id);
            }
        });
        if (ids.length === 0) {
            ywl.notify_error('请选择要批量修改的提现ID！');
            return;
        }
        var _fn_sure = function (cb_stack, cb_args) {
            ywl.ajax_post_json_time_out('/withdrawanchorlist/edit', {ids: ids, type: 11}, 1000 * 30,
                function (ret) {
                    if (ret.code === TPE_OK) {
                        host_table.reload();
                        ywl.notify_success('设为审核未通过成功！');
                    } else if (ret.code === -2) {
                        host_table.reload();
                        ywl.notify_success('设为审核未通过部分成功！');
                        alert('无法设为审核未通过(失败的提现ID为): ' + ret.message)
                    } else {
                        ywl.notify_error('设为审核未通过失败！' + ret.message);
                    }
                },
                function () {
                    ywl.notify_error('网络故障，设为审核未通过失败！');
                }
            );
        };
        var cb_stack = CALLBACK_STACK.create();

        ywl.dlg_confirm(cb_stack, {
            msg: '<p>您确定要设为审核未通过吗?</p>',
            fn_yes: _fn_sure
        });
    });
    $("#btn-host-35").click(function () {
        var ids = [];
        var _objs = $(host_table.selector + " tbody tr td [data-check-box]");
        $.each(_objs, function (i, _obj) {
            if ($(_obj).is(':checked')) {
                var _row_data = host_table.get_row(_obj);
                ids.push(_row_data.id);
            }
        });
        if (ids.length === 0) {
            ywl.notify_error('请选择要批量修改的提现ID！');
            return;
        }
        var _fn_sure = function (cb_stack, cb_args) {
            ywl.ajax_post_json_time_out('/withdrawanchorlist/edit', {ids: ids, type: 35}, 1000 * 30,
                function (ret) {
                    if (ret.code === TPE_OK) {
                        host_table.reload();
                        ywl.notify_success('设为打款异常已处理成功！');
                    } else if (ret.code === -2) {
                        host_table.reload();
                        ywl.notify_success('设为打款异常部分成功！');
                        alert('无法设为打款异常(失败的提现ID为): ' + ret.message)
                    } else {
                        ywl.notify_error('设为打款异常已处理失败！' + ret.message);
                    }
                },
                function () {
                    ywl.notify_error('网络故障，设为打款异常已处理失败！');
                }
            );
        };
        var cb_stack = CALLBACK_STACK.create();

        ywl.dlg_confirm(cb_stack, {
            msg: '<p>您确定要设为打款异常已处理吗?</p>',
            fn_yes: _fn_sure
        });
    });

    $("#btn-host-20").click(function () {
        var ids = [];
        var _objs = $(host_table.selector + " tbody tr td [data-check-box]");
        $.each(_objs, function (i, _obj) {
            if ($(_obj).is(':checked')) {
                var _row_data = host_table.get_row(_obj);
                ids.push(_row_data.id);
            }
        });
        if (ids.length === 0) {
            ywl.notify_error('请选择要批量修改的提现ID！');
            return;
        }
        var _fn_sure = function (cb_stack, cb_args) {
            ywl.ajax_post_json_time_out('/withdrawanchorlist/edit', {ids: ids, type: 20}, 1000 * 30,
                function (ret) {
                    if (ret.code === TPE_OK) {
                        host_table.reload();
                        ywl.notify_success('设为已提交财务成功！');
                    } else if (ret.code === -2) {
                        host_table.reload();
                        ywl.notify_success('设为已提交财务部分成功！');
                        alert('无法设为已提交财务(失败的提现ID为): ' + ret.message)
                    } else {
                        ywl.notify_error('设为已提交财务失败！' + ret.message);
                    }
                },
                function () {
                    ywl.notify_error('网络故障，设为已提交财务失败！');
                }
            );
        };
        var cb_stack = CALLBACK_STACK.create();

        ywl.dlg_confirm(cb_stack, {
            msg: '<p>您确定要设为已提交财务吗?</p>',
            fn_yes: _fn_sure
        });
    });
    $("#btn-host-30").click(function () {
        var ids = [];
        var _objs = $(host_table.selector + " tbody tr td [data-check-box]");
        $.each(_objs, function (i, _obj) {
            if ($(_obj).is(':checked')) {
                var _row_data = host_table.get_row(_obj);
                ids.push(_row_data.id);
            }
        });
        if (ids.length === 0) {
            ywl.notify_error('请选择要批量修改的提现ID！');
            return;
        }
        var _fn_sure = function (cb_stack, cb_args) {
            ywl.ajax_post_json_time_out('/withdrawanchorlist/edit', {ids: ids, type: 30}, 1000 * 30,
                function (ret) {
                    if (ret.code === TPE_OK) {
                        host_table.reload();
                        ywl.notify_success('设为打款异常成功！');
                    } else if (ret.code === -2) {
                        host_table.reload();
                        ywl.notify_success('设为审打款异常部分成功！');
                        alert('无法设为打款异常(失败的提现ID为): ' + ret.message)
                    } else {
                        ywl.notify_error('设为打款异常失败！' + ret.message);
                    }
                },
                function () {
                    ywl.notify_error('网络故障，设为打款异常失败！');
                }
            );
        };
        var cb_stack = CALLBACK_STACK.create();

        ywl.dlg_confirm(cb_stack, {
            msg: '<p>您确定要设为打款异常吗?</p>',
            fn_yes: _fn_sure
        });
    });
    $("#btn-host-40").click(function () {
        var ids = [];
        var _objs = $(host_table.selector + " tbody tr td [data-check-box]");
        $.each(_objs, function (i, _obj) {
            if ($(_obj).is(':checked')) {
                var _row_data = host_table.get_row(_obj);
                ids.push(_row_data.id);
            }
        });
        if (ids.length === 0) {
            ywl.notify_error('请选择要批量修改的user_ID！');
            return;
        }
        var _fn_sure = function (cb_stack, cb_args) {
            ywl.ajax_post_json_time_out('/withdrawanchorlist/edit', {ids: ids, type: 40}, 1000 * 30,
                function (ret) {
                    if (ret.code === TPE_OK) {
                        host_table.reload();
                        ywl.notify_success('设为已完成成功！');
                    } else if (ret.code === -2) {
                        host_table.reload();
                        ywl.notify_success('设为已完成部分成功！');
                        alert('无法设为已完成(失败的提现ID为): ' + ret.message)
                    } else {
                        ywl.notify_error('设为已完成失败！' + ret.message);
                    }
                },
                function () {
                    ywl.notify_error('网络故障，设为已完成失败！');
                }
            );
        };
        var cb_stack = CALLBACK_STACK.create();

        ywl.dlg_confirm(cb_stack, {
            msg: '<p>您确定要设为已完成吗?</p>',
            fn_yes: _fn_sure
        });
    });


    $("#btn-add-host").click(function () {
        v_dlg.create_show();
    });


    $(dom_id + " [ywl-filter='select']").click(function () {
        host_table.load_data(cb_stack, {}, 'search')
    });

    $(dom_id + " [ywl-filter='update']").click(function () {
        // host_table.load_data(cb_stack, {})

        var income_from = icom_dupdate;
        var id = $('input[id=id]').val();
        var phone = $('input[id=phone]').val();
        var user_id = $('input[id=user_id]').val();
        var bank_name = $('input[id=bank_name]').val();
        var start_time = $('input[id=start_time]').val();
        var end_time = $('input[id=end_time]').val();

        var isFirefox = /firefox/i.test(navigator.userAgent);

        $.get("/withdrawanchorlist/update?income_from=" + income_from + "&id=" + id + "&phone=" + phone + "&user_id=" + user_id + "&bank_name=" + bank_name + "&start_time=" + start_time + "&end_time=" + end_time, function (result) {
            // alert(result.data);
            var url = result.data;
            {
                if (!url) return;
                if (isFirefox) {
                    location.href = url
                } else {
                    a = document.createElement('a')
                    a.download = url.replace(/.+\/([^/]+\.\w+)(?:\?.*)?$/, '$1')
                    a.href = url
                    a.click()
                }
            }
        });

    });


    ywl.create_table_filter_incometype_list(host_table, dom_id + " [ywl-filter='income_from']");
    ywl.create_table_filter_search_box(host_table, dom_id + " [ywl-filter='user_id']", "", "user_id");
    ywl.create_table_filter_search_box(host_table, dom_id + " [ywl-filter='id']", "", "id");
    ywl.create_table_filter_search_box(host_table, dom_id + " [ywl-filter='phone']", "", "phone");
    ywl.create_table_filter_search_box(host_table, dom_id + " [ywl-filter='bank_name']", "", "bank_name");
    ywl.create_table_filter_search_box(host_table, dom_id + " [ywl-filter='start_time']", "", "start_time");
    ywl.create_table_filter_search_box(host_table, dom_id + " [ywl-filter='end_time']", "", "end_time");
    cb_stack
        .add(host_table.load_data)
        .add(host_table.init)
        .exec();
};


ywl.create_needschedule_info_dlg = function (tbl) {
    var needschedule_info_dlg = {};
    needschedule_info_dlg.dom_id = "#dialog-withdrawanchoredit-info";
    needschedule_info_dlg.update = 1;
    needschedule_info_dlg.tbl = tbl;
    needschedule_info_dlg.id = 0;
    needschedule_info_dlg.commit = '';

    needschedule_info_dlg.update_show = function (id, commit) {
        needschedule_info_dlg.update = 1;
        document.getElementById("commit_data").value = commit
        needschedule_info_dlg.init(id, commit);
        $('#dlg-notice').hide();
        $(needschedule_info_dlg.dom_id).modal();
    };

    needschedule_info_dlg.hide = function () {
        $(needschedule_info_dlg.dom_id).modal('hide');
    };

    needschedule_info_dlg.init = function (id, commit) {
        needschedule_info_dlg.id = id;
        needschedule_info_dlg.commit = commit;
        // needschedule_info_dlg.init_dlg();
    };

    needschedule_info_dlg.check_args = function () {
        var commit = $(needschedule_info_dlg.dom_id + ' #commit_data').val()
        needschedule_info_dlg.commit = commit;
        return true;
    };

    needschedule_info_dlg.post = function () {
        if (needschedule_info_dlg.update === 1) {
            ywl.ajax_post_json('/withdrawanchorlist/edit_commit', {
                    id: needschedule_info_dlg.id, commit: needschedule_info_dlg.commit
                },
                function (ret) {
                    if (ret.code === TPE_OK) {
                        needschedule_info_dlg.tbl.reload();
                        ywl.notify_success('更新成功！');
                        needschedule_info_dlg.hide();
                    } else {
                        ywl.notify_error('更新失败：' + ret.message);
                    }
                },
                function () {
                    ywl.notify_error('网络故障，更新失败！');
                }
            );
        }
        return true;
    };
    $(needschedule_info_dlg.dom_id + " #btn-save").click(function () {
        if (!needschedule_info_dlg.check_args()) {
            return;
        }
        needschedule_info_dlg.post();
    });
    return needschedule_info_dlg
};






ywl.on_host_table_header_created = function (tbl) {
    $('#host-select-all').click(function () {
        var _is_selected = $(this).is(':checked');
        $(tbl.selector + ' tbody').find('[data-check-box]').prop('checked', _is_selected);
    });
};
// 扩展/重载表格的功能
ywl.on_host_table_created = function (tbl) {

    tbl.on_cell_created = function (row_id, col_key, cell_obj) {
        if (col_key === 'select_all') {
            // 选择
            $('#host-select-' + row_id).click(function () {
                var _all_checked = true;
                var _objs = $(tbl.selector + ' tbody').find('[data-check-box]');
                $.each(_objs, function (i, _obj) {
                    if (!$(_obj).is(':checked')) {
                        _all_checked = false;
                        return false;
                    }
                });

                var select_all_dom = $('#host-select-all');
                if (_all_checked) {
                    select_all_dom.prop('checked', true);
                } else {
                    select_all_dom.prop('checked', false);
                }
            });

        } else if (col_key === "action") {
            var row_data = tbl.get_row(row_id);
            $(cell_obj).find('[ywl-btn-edit]').click(function () {
                var remark = $(this).attr("remark");
                v_dlg.update_show(row_data.id, remark)
            });
        }
    };

    // 重载表格渲染器的部分渲染方式，加入本页面相关特殊操作f成功
    tbl.on_render_created = function (render) {

        render.make_check_box = function (row_id, fields) {
            return '<span><input type="checkbox" data-check-box="' + fields.id + '" id="host-select-' + row_id + '"></span>';
        };

        render.room_url = function (row_id, fields) {
            return fields.room_url ? '<a href="' + fields.room_url + '" target="_blank">' + fields.room_url + ' </a>' : "<label style='color: #0eb320'>--</label>";
        };

        render.make_action_btn = function (row_id, fields) {
            var ret = [];
            // if (fields.ret_code === 9999 && fields.cost_time > 0) {
            ret.push('<a href="javascript:;" class="btn btn-sm btn-primary" remark=' + fields.remark + ' ywl-btn-edit="' + fields.ID + '">修改备注</a>&nbsp');
            // ret.push('<a href="javascript:;" class="btn btn-sm btn-success" protocol=' + fields.protocol + ' ywl-btn-delete="' + fields.ID + '">删除</a>&nbsp');
            // }
            return ret.join('');
        };


        render.format_incomeAll = function (row_id, fields) {
            var temp = '未处理'
            if (fields.union_balance === '打款异常') {
                temp = '<span class="badge badge-danger mono">打款异常</span>'
            } else if (fields.union_balance === '已审核') {
                temp = '<span class="badge badge-warning mono">已审核</span>'
            } else if (fields.union_balance === '已完成') {
                temp = '<span class="badge badge-success mono">已完成</span>'
            } else if (fields.union_balance === '审核未通过') {
                temp = '<span class="badge badge-danger mono">审核未通过</span>'
            } else if (fields.union_balance === '已提交财务') {
                temp = '<span class="badge badge-primary mono">已提交财务</span>'
            } else if (fields.union_balance === '未处理') {
                temp = '<span class="badge badge-purple mono">未处理</span>'
            } else if (fields.union_balance === '打款异常已处理') {
                temp = '<span class="badge badge-info mono">打款异常已处理</span>'
            }
            return '<label style="color: red">' + temp + '</label>'

        };

        render.withdraw_yes_no = function (row_id, fields) {
            var temp = '未处理'
            if (fields.union_balance === '否') {
                temp = '<span class="badge badge-danger mono">否</span>'
            } else if (fields.union_balance === '是') {
                temp = '<span class="badge badge-success mono">是</span>'
            }
            return '<label style="color: red">' + temp + '</label>'
        };

        render.front_with = function (row_id, fields) {
            var temp = []
            if (fields.id_img_front) {
                var arr = fields.id_img_front;
                // alert(arr)
                temp.push('<a href=' + arr + ' target=_blank>正面证件照</a>')
            }
            return temp.join("  ");
        };

        render.back_with = function (row_id, fields) {
            var temp = []
            if (fields.id_img_back) {
                var arr = fields.id_img_back;
                // alert(arr)
                temp.push('<a href=' + arr + ' target=_blank>背面证件照</a>')
            }
            return temp.join("  ");
        };

        render.format_time = function (row_id, fields) {
            return '<span class="badge badge-primary mono">' + fields.logtime.replace("T", " ") + ' </span>';
        };


    };
};

ywl.create_table_filter_incometype_list = function (tbl, selector, on_created) {
    var _tblf_st = {};

    // 此表格绑定的DOM对象的ID，用于JQuery的选择器
    _tblf_st.selector = selector;
    // 此过滤器绑定的表格控件
    _tblf_st._table_ctrl = tbl;
    _tblf_st._table_ctrl.append_filter_ctrl(_tblf_st);

    // 过滤器内容
    _tblf_st.filter_name = 'income_from';
    _tblf_st.filter_default = '';
    _tblf_st.filter_value = '';

    _tblf_st.get_filter = function () {
        var _ret = {};
        _ret[_tblf_st.filter_name] = _tblf_st.filter_value;
        // _ret["package_id"] = $("#package_id").val();
        return _ret;
    };

    _tblf_st.reset = function (cb_stack, cb_args) {
        if (_tblf_st.filter_value == _tblf_st.filter_default) {
            cb_stack.exec();
            return;
        }

        cb_stack
            .add(function (cb_stack) {
                _tblf_st.filter_value = _tblf_st.filter_default;
                $(_tblf_st.selector + ' button span:first').html(_tblf_st.filter_value);
                cb_stack.exec();
            });
    };

    _tblf_st.init = function (cb_stack) {
        var node = '';
        var user_list = ywl.page_options.user_list;
        node += '<li><a href="javascript:;" ywl-income-from="">全部</a></li>';
        node += '<li role="separator" class="divider"></li>';
        node += '<li><a href="javascript:;" ywl-income-from="' + 10 + '"> 未处理 </a></li>'
        node += '<li><a href="javascript:;" ywl-income-from="' + 11 + '"> 审核未通过 </a></li>'
        node += '<li><a href="javascript:;" ywl-income-from="' + 15 + '"> 已审核 </a></li>'
        node += '<li><a href="javascript:;" ywl-income-from="' + 20 + '">已提交财务 </a></li>'
        node += '<li><a href="javascript:;" ywl-income-from="' + 30 + '">打款异常 </a></li>'
        node += '<li><a href="javascript:;" ywl-income-from="' + 35 + '">打款异常已处理 </a></li>'
        node += '<li><a href="javascript:;" ywl-income-from="' + 40 + '">已完成 </a></li>'
        _tblf_st.filter_value = _tblf_st.filter_default;
        $(_tblf_st.selector + ' button span:first').html(_tblf_st.filter_value);
        $(_tblf_st.selector + ' ul').empty().append($(node));
        $(_tblf_st.selector + ' button span:first').html('全部');

        // 点击事件绑定
        $(_tblf_st.selector + ' ul [ywl-income-from]').click(_tblf_st._on_select);

        if (_.isFunction(on_created)) {
            on_created(_tblf_st);
        }

        cb_stack.exec();
    };

    _tblf_st._on_select = function () {
        var income_from = $(this).attr("ywl-income-from");
        icom_dupdate = income_from;

        var income_from_html = $(this).html();

        var cb_stack = CALLBACK_STACK.create();
        cb_stack
            .add(_tblf_st._table_ctrl.load_data)
            .add(function (cb_stack) {
                _tblf_st.filter_value = income_from;
                $(_tblf_st.selector + ' button span:first').html(income_from_html);
                // cb_stack.exec();
            });
        cb_stack.exec();
    };

    return _tblf_st;
};


// function update_show(id, commit) {
//     // $("#dlg-notice").show();
//     $("#dialog-withdrawanchoredit-info").modal();
//     document.getElementById("commit_data").value = commit;
//     $("#btn-save").click(function () {
//         var commit_data = $("#commit_data").val();
//         ywl.ajax_post_json('/withdrawanchorlist/edit_commit', {
//                 id: id,
//                 commit: commit_data
//             },
//             function (ret) {
//                 if (ret.code === TPE_OK) {
//                     ywl.notify_success('修改备注成功！');
//                     $("#dialog-withdrawanchoredit-info").modal('hide');
//                     window.location.reload();
//                 } else {
//                     ywl.notify_error('修改备注失败：' + ret.message);
//                 }
//             },
//             function () {
//                 ywl.notify_error('网络故障，修改备注失败！');
//             }
//         );
//     });
// }