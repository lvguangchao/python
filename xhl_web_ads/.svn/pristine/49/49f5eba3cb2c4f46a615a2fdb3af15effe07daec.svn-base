# -*- coding: utf-8 -*-
# reload(sys)
# sys.setdefaultencoding('utf8')

import os,time
import xlwt
import pymysql
from datetime import datetime, date
from eom_app.app.configs import app_cfg

cfg = app_cfg()


def export(data,list,lits2):
    # conn = pymysql.connect(host,user,password,dbname,charset='utf8')
    # cursor = conn.cursor()
    # print(data,list)
    #
    # count = cursor.execute('select * from '+table_name)
    # print(count)
    # # 重置游标的位置
    # cursor.scroll(0,mode='absolute')
    # # 搜取所有结果
    # results = cursor.fetchall()
    #
    # # 获取MYSQL里面的数据字段名称
    # fields = cursor.description
    # print(data)
    date_now = datetime.now()
    date_now = date_now.strftime('%d%H%M%S')
    datas = data[0]

    workbook = xlwt.Workbook()
    sheet = workbook.add_sheet('table_update', cell_overwrite_ok=True)
    # print(fields)
    # 写上字段信息\
    # print(data)
    fields = list
    for field in range(0, len(fields)):
        # print(field)
        sheet.write(0, field, fields[field])
    # print('222')
    # 获取并写入数据段信息
    row = 1
    col = 0
    # print(data[0])

    for row in range(1, len(data) + 1):
        # print(row)
        # print(data[0])
        # sheet.write(row, int(0), u'%s' % data[row-1][0])
        sheet.write(row, int(0), u'%s' % data[row - 1]['id'])
        # print('5656')
        # sheet.write(row, int(1), u'%s' % data[row-1][2])
        sheet.write(row, int(1), u'%s' % data[row - 1]['user_id'])
        sheet.write(row, int(2), u'%s' % data[row - 1]['u_mobile_number'])
        sheet.write(row, int(3), u'%s' % data[row - 1]['money'])
        sheet.write(row, int(4), u'%s' % data[row - 1]['sevice_money'])
        sheet.write(row, int(5), u'%s' % data[row - 1]['money_rp'])
        sheet.write(row, int(6), u'%s' % data[row - 1]['create_time'])
        sheet.write(row, int(7), u'%s' % data[row - 1]['bank_name'])
        sheet.write(row, int(8), u'%s' % data[row - 1]['bank_card_number'])
        sheet.write(row, int(9), u'%s' % data[row - 1]['bank_sub_name'])
        sheet.write(row, int(10), u'%s' % data[row - 1]['hold_user_name'])
        sheet.write(row, int(11), u'%s' % data[row - 1]['id_number'])
        sheet.write(row, int(12), u'%s' % data[row - 1]['id_img_front'])
        sheet.write(row, int(13), u'%s' % data[row - 1]['id_img_back'])
        sheet.write(row, int(14), u'%s' % data[row - 1]['qq_number'])
        sheet.write(row, int(15), u'%s' % data[row - 1]['money_balance'])
        sheet.write(row, int(16), u'%s' % data[row - 1]['apply_name'])
        # print('45454545')

    # print(date_now)
    xls_url = os.path.join(cfg.static_path, 'download/', '提现_' + str(date_now) + '.xls')
    excel_url = '/static/download/' + '提现_' + str(date_now) + '.xls'
    # print(xls_url)

    workbook.save(xls_url)

    # workbook.save('../static/download/'+str(date_now)+str(platform_id)+'.xlsx')

    return excel_url

def exportIncome(data, list, filename):
        filename = filename if filename != "" else "_detail"
        date_now = int(time.time())
        workbook = xlwt.Workbook()
        sheet = workbook.add_sheet('table_update', cell_overwrite_ok=True)
        fields = list
        for field in range(0, len(fields)):
            sheet.write(0, field, fields[field])
        row = 1
        col = 0
        # print(data[0])

        for row in range(1, len(data) + 1):

            # sheet.write(row, int(0), u'%s' % data[row-1][0])
            # sheet.write(row, int(0), u'%s' % data[row - 1]['play_id'])
            # sheet.write(row, int(1), u'%s' % data[row-1][2])
            sheet.write(row, int(0), u'%s' % data[row - 1]['union_id'])
            sheet.write(row, int(1), u'%s' % data[row - 1]['union_name'])
            # sheet.write(row, int(3), u'%s' % data[row - 1]['anchor_level'])
            # sheet.write(row, int(4), u'%s' % data[row - 1]['need_level'])
            sheet.write(row, int(2), u'%s' % data[row - 1]['income_log_id'])
            sheet.write(row, int(3), u'%s' % data[row - 1]['income_from'])
            sheet.write(row, int(4), u'%s' % data[row - 1]['income'])
            sheet.write(row, int(5), u'%s' % data[row - 1]['user_id'])
            sheet.write(row, int(6), u'%s' % data[row - 1]['task_id'])
            sheet.write(row, int(7), u'%s' % data[row - 1]['task_create_time'])
            sheet.write(row, int(8), u'%s' % data[row - 1]['plat_name'])
            sheet.write(row, int(9), u'%s' % data[row - 1]['room_id'])
            sheet.write(row, int(10), u'%s' % data[row - 1]['anchor_name'])
            sheet.write(row, int(11), u'%s' % data[row - 1]['room_url'])

        xls_url = os.path.join(cfg.static_path, 'download/', str(date_now) + filename + '.xls')
        excel_url = '/static/download/' + str(date_now) + filename + '.xls'

        workbook.save(xls_url)

        return excel_url

def exportPlayRecord(data, list, filename):
        filename = filename if filename != "" else "_播放记录"
        date_now = int(time.time())
        workbook = xlwt.Workbook()
        sheet = workbook.add_sheet('table_update', cell_overwrite_ok=True)
        fields = list
        for field in range(0, len(fields)):
            sheet.write(0, field, fields[field])
        row = 1
        col = 0
        # print(data[0])

        for row in range(1, len(data) + 1):

            # sheet.write(row, int(0), u'%s' % data[row-1][0])
            # sheet.write(row, int(0), u'%s' % data[row - 1]['play_id'])
            # sheet.write(row, int(1), u'%s' % data[row-1][2])
            sheet.write(row, int(0), u'%s' % data[row - 1]['task_create_time'])
            sheet.write(row, int(1), u'%s' % data[row - 1]['task_id'])
            # sheet.write(row, int(3), u'%s' % data[row - 1]['anchor_level'])
            # sheet.write(row, int(4), u'%s' % data[row - 1]['need_level'])
            sheet.write(row, int(2), u'%s' % data[row - 1]['anchor_level'])
            sheet.write(row, int(3), u'%s' % data[row - 1]['new_level'])
            sheet.write(row, int(4), u'%s' % data[row - 1]['user_id'])
            sheet.write(row, int(5), u'%s' % data[row - 1]['plat_id'])
            sheet.write(row, int(6), u'%s' % data[row - 1]['room_id'])
            sheet.write(row, int(7), u'%s' % data[row - 1]['source_link'])
            sheet.write(row, int(8), u'%s' % data[row - 1]['begin_time'])
            sheet.write(row, int(9), u'%s' % data[row - 1]['postion_id'])
            sheet.write(row, int(10), u'%s' % data[row - 1]['ads_id'])
            sheet.write(row, int(11), u'%s' % data[row - 1]['max_user_pre_count'])
            sheet.write(row, int(12), u'%s' % data[row - 1]['popularity'])
            sheet.write(row, int(13), u'%s' % data[row - 1]['estmate_income'])
            sheet.write(row, int(14), u'%s' % data[row - 1]['play_id'])
            sheet.write(row, int(15), u'%s' % data[row - 1]['income'])
            sheet.write(row, int(16), u'%s' % data[row - 1]['verify_result'])
            sheet.write(row, int(17), u'%s' % data[row - 1]['verify_status'])
            sheet.write(row, int(18), u'%s' % data[row - 1]['record_path'])
            sheet.write(row, int(19), u'%s' % data[row - 1]['screen_shot_path'])

        xls_url = os.path.join(cfg.static_path, 'download', str(date_now) + filename + '.xls')
        excel_url = r'/static/download/' + str(date_now) + filename + '.xls'

        workbook.save(xls_url)

        return excel_url